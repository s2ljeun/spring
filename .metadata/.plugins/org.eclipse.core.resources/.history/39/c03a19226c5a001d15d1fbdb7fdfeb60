package student.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import student.dto.StudentDTO;

public class StudentDAOImpl implements StudentDAO{
	private JdbcTemplate jdbcTemplate;

	public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
		this.jdbcTemplate = jdbcTemplate;
	}

	@Override
	public int insertStudent(StudentDTO dto) {
		String sql = "insert into student values (?,?,?)";
		Object[] values = new Object[] {dto.getId(), dto.getName(), dto.getCname()};
		int res = jdbcTemplate.update(sql, values);
		return res;
	}

	@Override
	public int deleteStudent(String id) {
		String sql = "delete from student where id = ?";
		int res = jdbcTemplate.update(sql, id); // ?가 한 개일 때는 값을 직접 넣어도 된다
		return res;
	}

	@Override
	public List<StudentDTO> findStudent(String name) {
		String sql = "select * from student where name = ?";
		List<StudentDTO> list = jdbcTemplate.query(sql, mapper, name);
		return list;
	}

	@Override
	public List<StudentDTO> listStudent() {
		String sql = "select * from student";
		RowMapper mapper = new RowMapper<StudentDTO>() { // interface 객체 만들기 -> 익명중첩클래스 or 자식의 클래스를 상속받아 만든다 / 익명중첩클래스, 제너릭 활용 <StudentDTO>붙이기

			@Override
			public StudentDTO mapRow(ResultSet rs, int count) throws SQLException { //makeList의 역할
				// TODO Auto-generated method stub
				return null;
			}
			
			
		};
		List<StudentDTO> list = jdbcTemplate.query(sql, mapper);
		return list;
	}

}
